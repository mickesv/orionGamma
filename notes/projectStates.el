
(defun create-random-stratified (person max-num max-per-person)
  (let* ((increment (min (/ max-num max-per-person) max-num))
         (start-number (random (/ increment 2)))
         (current-number start-number)
         (count 0))
    (print (format "Generating random numbers for %s" person))
    (print (format "Increment is %d, Start number is %d" increment start-number))
    (while (< current-number max-num)
      (princ (format "%d : %d \n" count current-number))
      (setq count (1+ count))
      (setq current-number (+ current-number (+ start-number (random increment))))
      )))

(defun generate-numbers ()
  (interactive)
  (create-random-stratified "Efi" 361 20)  
  (create-random-stratified "Severine" 361 20)
  (create-random-stratified "Emil" 361 20)
  (create-random-stratified "Everyone" 361 10))
